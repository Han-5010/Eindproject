import pygame
import os
import random
import math

class Set:
    def __init__(self, aantal=1, symbool=1, kleur=1, vulling=1):
        self.a=aantal
        self.b=symbool
        self.c=kleur
        self.d=vulling
        if kleur==1: #self.e is de naam van het bijbehorende plaatje
            self.e='green'
        elif kleur==2:
            self.e='purple'
        elif kleur==3:
            self.e='red'
        if symbool==1:
            self.e+='diamond'
        elif symbool==2:
            self.e+='oval'
        elif symbool==3:
            self.e+='squiggle'
        if vulling==1:
            self.e+='empty'
        elif vulling==2:
            self.e+='filled'
        elif vulling==3:
            self.e+='shaded'
        self.e+=str(aantal)
        self.e=pygame.transform.scale(pygame.image.load(os.path.join('kaarten',self.e+'.gif')),(100,200))
    
    def __str__(self): #Deze string functie wordt in het spel niet gebruikt, maar is wel handig voor het programmeren
        return '('+str(self.a)+str(self.b)+str(self.c)+str(self.d)+')'
    
    def __repr__(self): #dit zorgt ervoor dat je een lijst met set-kaarten in één keer kan printen
        return str(self)

def controleer(x,y,z): #controleer of drie kaarten een set vormen
    if eigenschap(x.a,y.a,z.a) and eigenschap(x.b,y.b,z.b) and eigenschap(x.c,y.c,z.c) and eigenschap(x.d,y.d,z.d):
        return True
    return False

def eigenschap(x,y,z): #controleer of drie eigenschappen allemaal hetzelfde of allemaal verschillend zijn
    if x==y==z or x!=y and y!=z and z!=x:
        return True
    return False

def find_set(lijst): #vind alle sets in een lijst met set-kaarten
    n=len(lijst)
    uitvoer=[]
    for i in range(n-2):
        for j in range(i+1,n-1):
            for k in range(j+1,n):
                if controleer(lijst[i],lijst[j],lijst[k]):
                    uitvoer.append((lijst[i],lijst[j],lijst[k]))
    return uitvoer

kaarten=[] #dit is een lijst met alle 81 set-kaarten
for i in range(1,4):
    for j in range(1,4):
        for k in range(1,4):
            for l in range(1,4):
                kaarten.append(Set(i,j,k,l))

random.shuffle(kaarten) #de kaarten worden geschud
width,height=900,700
win=pygame.display.set_mode((width,height)) #het venster met bijbehorende afmetingen
pygame.display.set_caption('Set')
achtergrond=(200,220,255) #de kleuren worden hier gedefinieerd, zodat we dat later niet hoeven te doen
blue=(100,150,255)
light_blue=(130,170,255)
lighter_blue=(170,200,255)
white=(255,255,255)
black=(0,0,0)
red=(255,0,0)
fps=60 #dit is belangrijk, want hierdoor loopt de timer bij iedereen even snel
pygame.font.init()
font_uitleg=pygame.font.Font('freesansbold.ttf',20)
uitleg=['Welkom bij set!',
        'In dit spel zijn er 81 unieke kaarten met elk 4 eigenschappen.',
        'De eigenscahppen zijn:',
        'Symbool: Elke kaart heeft ruiten, ovalen of squiggle-vormen.',
        'Kleur: Elke kaart heeft rode, groene of paarse vormen',
        'Aantal: Elke kaart heeft 1, 2 of 3 vormen.',
        'Vulling: Elke kaart heeft gevulde, lege of gestippelde vormen.',
        'Bij dit spel is het de bedoeling om drie kaarten te vinden,',
        'waarbij voor elke eigenschap geldt dat ze allemaal hetzelfde of allemaal verschillend zijn.',
        'Een groep kaarten met deze eigenschap noemen we een set.',
        'Er zijn straks 12 kaarten in het spel en er is een timer.',
        'Als je een set heb gevonden, selecteer je die drie kaarten en klik je op "Set!"',
        'Je verdient dan een punt.',
        'Als er geen set is, klik dan op "Geen set" om een punt te krijgen.',
        'Er worden dan drie kaarten vervangen zodat je verder kan spelen.',
        'Maar let op: Als je een foute set invult, onterecht op "Geen set" klikt',
        'of als de tijd om is, terwijl er een set was, krijgt de computer een punt.',
        'Veel succes en plezier!']
text_uitleg=[]
text_uitleg_rect=[]
for i in range(len(uitleg)):
    text_uitleg.append(font_uitleg.render(uitleg[i],False,black))
    text_uitleg_rect.append(text_uitleg[i].get_rect(center=(450,330+30*(i-(len(uitleg)+1)//2))))

def main():
    clock=pygame.time.Clock()
    run=True
    stapel=kaarten[12:] #kaarten die nog moeten komen
    in_het_spel=kaarten[:12] #de (meestal 12) kaarten die op dit moment in het spel zijn
    is_geselecteerd=12*[False] #aan het begin heb je nog geen kaarten geselecteerd
    time=0
    status='begin'
    computer_score=0 #al deze variabelen worden in de main functie gedefinieerd, omdat ze niet constant zijn
    speler_score=0
    
    while run:
        clock.tick(fps)
        geselecteerd=[]
        mouse_pos=pygame.mouse.get_pos()
        mouse_clicked=False
        for event in pygame.event.get():
            if event.type==pygame.QUIT:
                run=False #als je op het kruisje klikt, stopt het spel
            if event.type==pygame.MOUSEBUTTONDOWN:
                mouse_clicked=True
                
        win.fill(achtergrond)
        if status=='begin': #we hebben voor verschillende momenten in het spel verschillende statussen gebruikt, wat het ook overzichtelijk houdt
            max_time=begin(mouse_pos,mouse_clicked)
            if max_time==0:
                status='uitleg'
            elif type(max_time)==int:
                status='spel'
        
        elif status=='uitleg':
            for i in range(len(uitleg)):
                win.blit(text_uitleg[i],text_uitleg_rect[i])
                draw_button('Naar het spel',270,600,360,90,50,mouse_pos)
                if 270<mouse_pos[0]<630 and 600<mouse_pos[1]<690 and mouse_clicked:
                    status='begin'
        
        elif status=='einde':
            einde(speler_score,computer_score,mouse_pos)
            if mouse_clicked:
                if 250<mouse_pos[0]<650 and 400<mouse_pos[1]<500:#'Nog een keer!'
                    random.shuffle(kaarten)
                    main()
                elif 250<mouse_pos[0]<650 and 520<mouse_pos[1]<620:#'Stoppen'
                    run=False
        
        else: #dit gebeurt altijd, behalve aan het begin, bij de uitleg of aan het einde
            for i in range(len(in_het_spel)):
                if is_geselecteerd[i]:
                    geselecteerd.append(i) #dit zijn de geselecteerde kaarten
            draw_cards(in_het_spel,mouse_pos,is_geselecteerd)
            draw_side(len(geselecteerd),mouse_pos,time,max_time,status,computer_score,speler_score)
        
        if status=='spel' or status=='twee_seconden_wachten':#in deze statussen moet de pauzeknop kunnen werken
            if 855<mouse_pos[0]<895 and 10<mouse_pos[1]<50 and mouse_clicked:
                vorige_status=status
                status='pauze'
        
        if status=='spel':
            time+=1/fps
            
            for i in range(len(in_het_spel)):
                if 40+140*(i//3)<mouse_pos[0]<140*(i//3+1) and 25+225*(i%3)<mouse_pos[1]<225*(i%3+1) and mouse_clicked and time>1/fps:
                    is_geselecteerd[i]=not is_geselecteerd[i] #als je op een kaart klikt, wordt hij ge(de)selecteerd
        
            if len(geselecteerd)==3 and 620<mouse_pos[0]<880 and 20<mouse_pos[1]<120 and mouse_clicked: #Er wordt op 'Set!' geklikt
                if controleer(in_het_spel[geselecteerd[0]],in_het_spel[geselecteerd[1]],in_het_spel[geselecteerd[2]]):
                    is_geselecteerd=len(in_het_spel)*[False]
                    speler_score+=1
                    time=0
                    if len(stapel)==0:
                        for i in range(3):
                            in_het_spel.pop(geselecteerd[2-i])
                    else:
                        in_het_spel[geselecteerd[0]],in_het_spel[geselecteerd[1]],in_het_spel[geselecteerd[2]]=stapel[-3:]
                        for j in range(3):
                            stapel.pop(-1)
                else: #De set klopt niet, de computer gaat er een aanwijzen (als er een is)
                    time=0
                    status='computer_beurt'
                    
            if 620<mouse_pos[0]<880 and 140<mouse_pos[1]<240 and mouse_clicked: #Er wordt op 'Geen set' geklikt
                if len(find_set(in_het_spel))>0:
                    status='computer_beurt'
                else:
                    speler_score+=1
                    status='geen set'
            if time>max_time:
                time=0
                status='computer_beurt'
        
        elif status=='pauze':#maak pauzemenu
            win.fill(achtergrond)
            draw_button('Verder spelen',250,150,400,100,48,mouse_pos)#maak knoppen
            draw_button('Terug naar hoofdmenu',150,300,600,100,48,mouse_pos)
            draw_button('Stoppen',300,450,300,100,48,mouse_pos)
            if 250<mouse_pos[0]<650 and 150<mouse_pos[1]<250 and mouse_clicked:#verder spelen
                status=vorige_status#ga terug naar de vorige status
            if 150<mouse_pos[0]<750 and 300<mouse_pos[1]<400 and mouse_clicked:#naar hoofdmenu
                main()
            if 300<mouse_pos[0]<600 and 450<mouse_pos[1]<550 and mouse_clicked:#stoppen
                run=False
            
        elif status=='computer_beurt':
            computer_score+=1
            time=0
            if len(find_set(in_het_spel))>0:
                is_geselecteerd=len(in_het_spel)*[False]
                Set=find_set(in_het_spel)[0]
                p1,p2,p3=in_het_spel.index(Set[0]),in_het_spel.index(Set[1]),in_het_spel.index(Set[2])
                is_geselecteerd[p1]=True #drie kaarten die een set vormen worden geselecteerd zodat de speler het kan zien
                is_geselecteerd[p2]=True
                is_geselecteerd[p3]=True
                time2=0
                status='twee_seconden_wachten' #geeft de speler de tijd om de set te zien
            else:
                status='geen set'
                
        elif status=='twee_seconden_wachten':
            time2+=1/fps
            if time2>2:
                if len(stapel)==0:
                    in_het_spel.pop(p3)
                    in_het_spel.pop(p2)
                    in_het_spel.pop(p1)
                else:
                    in_het_spel[p1],in_het_spel[p2],in_het_spel[p3]=stapel[-3:]
                    for j in range(3):
                       stapel.pop(-1)
                is_geselecteerd=len(in_het_spel)*[False]
                status='spel'
        
        elif status=='geen set':
            if len(find_set(stapel+in_het_spel))==0:#er zijn geen sets meer tussen alle kaarten in de stapel en die in het spel, naar het eindscherm
                status='einde'
            else:#er is nog wel een set, dus de stapel is niet leeg, vervang kaarten 1,2,3 met kaarten uit stapel en leg kaarten 1,2,3 onderin stapel
                for i in range(3):
                    stapel.insert(0,in_het_spel[i])
                    in_het_spel[i]=stapel[-1]
                    stapel.pop(-1)
                status='spel'
        
        pygame.display.update()#dit zorgt ervoor dat alles daadwerkelijk wordt getekent
    pygame.quit() #als run==false moet het spel stoppen

def begin(mouse_pos,mouse_clicked):
    draw_button('Makkelijk',300,150,300,100,48,mouse_pos)
    draw_button('Gemiddeld',300,300,300,100,48,mouse_pos)
    draw_button('Moeilijk',300,450,300,100,48,mouse_pos)
    draw_button('Uitleg',800,0,100,50,30,mouse_pos)
    if mouse_clicked:
        if 300<mouse_pos[0]<600 and 150<mouse_pos[1]<250:
            return 35
        elif 300<mouse_pos[0]<600 and 300<mouse_pos[1]<400: 
            return 25
        elif 300<mouse_pos[0]<600 and 450<mouse_pos[1]<550:
            return 15
        elif 800<mouse_pos[0] and mouse_pos[1]<50:
            return 0
  

def draw_button(text,x,y,width,height,grootte,mouse_pos): #bij deze functie wordt er een knop gemaakt die wit wordt als je je muis eroverheen houdt;
    font=pygame.font.Font('freesansbold.ttf',grootte) #Hij wordt soms ook gebruikt puur om text neer te zetten, door als laatste input niet mouse_pos te gebruiken
    text=font.render(text,False,black) 
    text_rect=text.get_rect(center=(x+width/2,y+height/2)) 
    if x<mouse_pos[0]<x+width and y<mouse_pos[1]<y+height: 
        pygame.draw.rect(win,white,(x,y,width,height)) 
    win.blit(text,text_rect)

def draw_cards(in_het_spel,mouse_pos,is_geselecteerd):
    for i in range(len(in_het_spel)): #de kaarten worden getekent met de juiste achtergrondkleur
        if 40+140*(i//3)<mouse_pos[0]<140*(i//3+1) and 25+225*(i%3)<mouse_pos[1]<225*(i%3+1):
            if is_geselecteerd[i]:
                pygame.draw.rect(win,light_blue,pygame.Rect(20+140*(i//3),13+225*(i%3),140,225))
            else:
                pygame.draw.rect(win,lighter_blue,pygame.Rect(20+140*(i//3),13+225*(i%3),140,225))
        else:
            if is_geselecteerd[i]:
                pygame.draw.rect(win,blue,pygame.Rect(20+140*(i//3),13+225*(i%3),140,225))
        win.blit(in_het_spel[i].e,(40+140*(i//3),25+225*(i%3)))

def draw_side(num_geselecteerd,mouse_pos,time,max_time,status,computer_score,speler_score):
    pygame.draw.line(win,black,(600,0),(600,700)) #een scheidingslijn
    if num_geselecteerd==3 and status=='spel':
        draw_button('Set!',620,20,260,100,72,mouse_pos) #de 'Set!'-knop
    draw_button('',855,10,40,40,20,mouse_pos)#maak onderdelen van de pauzeknop:
    pygame.draw.rect(win,black,(867,20,4,20))#
    pygame.draw.rect(win,black,(878,20,4,20))#
    pygame.draw.circle(win,black,(875,30),18,3)#einde pauzeknop
    draw_button('Geen set',620,140,260,100,48,mouse_pos)
    punten=[(750,600)] #hier wordt de timer gemaakt, met een veelhoek zodat de timer langzaam wit wordt
    aantal=max(5,math.ceil(20*time/max_time))
    for i in range(aantal):
        punten.append((750+79*math.sin(i*time/max_time/(aantal-1)*2*math.pi),600-79*math.cos(i*time/max_time/(aantal-1)*2*math.pi)))
    pygame.draw.polygon(win,white,punten)
    pygame.draw.circle(win,black,(750,600),80,5)
    pygame.draw.line(win,black,(750,600),(750,520))
    pygame.draw.line(win,red,(750,600),(75*math.sin(time/max_time*2*math.pi)+750,-75*math.cos(time/max_time*2*math.pi)+600)) #einde timer
    draw_button('Speler',620,280,120,40,30,(700,300)) #begin score
    draw_button('Computer',760,280,120,40,23,(800,300))
    draw_button(str(speler_score),620,320,120,100,80,(700,400))
    draw_button(str(computer_score),760,320,120,100,80,(800,400))
    pygame.draw.line(win,black,(620,320),(740,320))
    pygame.draw.line(win,black,(760,320),(880,320)) #eind score

def einde(speler_score,computer_score,mouse_pos):
    if speler_score>computer_score:
        draw_button('Gefeliciteerd, je hebt gewonnen!',100,50,800,150,40,(0,0))
    elif speler_score==computer_score:
        draw_button('Een gelijkspel, goed gedaan!',100,50,800,150,40,(0,0))
    else:
        draw_button('Helaas, je hebt verloren!',100,50,800,150,40,(0,0))
    draw_button('Speler',300,200,120,40,30,(400,220))
    draw_button('Computer',480,200,120,40,23,(500,220))
    draw_button(str(speler_score),300,240,120,100,80,(400,300))
    draw_button(str(computer_score),480,240,120,100,80,(500,300))
    pygame.draw.line(win,black,(300,240),(420,240))
    pygame.draw.line(win,black,(480,240),(600,240))
    draw_button('Nog een keer!',250,400,400,100,50,mouse_pos)
    draw_button('Stoppen',250,520,400,100,50,mouse_pos)

if __name__=='__main__':
    main()
